

#define fx 74
#define fy 19
#define sx 140
#define sy 19
#define tx 74
#define ty 261
#define ex 140
#define ey 261

void creat_cube(Pcube pcube )//初始位置图形
{
for(i=0;i<13;i++)
{
pcube->cube_list[i]=malloc(sizeof(struct Node));
pcube->cube_list[i]->Next=pcube->cube_list[i];
for(j=0;j<4;j++)
{
Insert(i,j,pcube->cube_list[i]);
}
}
}

int data[22][12]={};
typedef void (*ara_fun)(Pcube pcube,int x,int y);

ara_fun shape_fun[13]={draw_left_L,draw_down_L,draw_right_L,draw_up_L, draw_v_N,draw_h_N,draw_v_I,draw_h_I,draw_up_T, draw_left_T ,draw_down_T,draw_right_T,draw_O,};


void juge_fun(Pcube pcube,Lcube cu)
{
switch (cu.which)
case 

}

void key(Pcube pcube,enum keys mykey)
{
Position pos=pcube->cube_list[pcube->index]->Next;
switch(mykey)
{
case LEFT :

if(pos->x==0)//还需要一个获取最后一个节点左边的函数，将index传入，返回最后一个节点
{

}
else
{


}
break;
case RIGHT:
break;

case DOWN:
break;
case UP://还需要一个函数判断下一个图形是否可以旋转
break;



}



}


rand()%5







void main()
{






















}


















